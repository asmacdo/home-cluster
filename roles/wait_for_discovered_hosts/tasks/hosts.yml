- set_fact:
    resolved_dns: []
    hosts_ping:
      results: []

- name: Check if host is accessible
  wait_for: host={{ hostvars[item].ansible_host }} port=22 timeout=30
  register: hosts_ping
  failed_when: False
  with_items: '{{ groups.nodes }}'

- set_fact:
    resolved_dns: '{{ resolved_dns + [item.item + " ("  + hostvars[item.item].ansible_host + "); reachable: "  + ((item.get("state") == "started")  | string)] }}'
  with_items: '{{ hosts_ping.results }}'

- set_fact:
    accessible_hosts: "{{ (hosts_ping.results | selectattr('state', 'defined') | selectattr('state', 'equalto', 'started') | list) }}"

- name: Interactive prompt for host discovery
  when: prompt_for_hosts
  block:
    - name: Time to boot some hosts!
      vars:
        message: |
          ======================================================================================
          = Foreman has been configured with tftp and is available at {{ inventory_hostname }}.
          =
          = The foreman ca crt has been copied to {{ foreman_cert_dest }}
          = You can import it to your browser to get rid of those pesky ssl errors.
          =
          = Please ensure your router has been configured to route tftp request to Foreman.
          =
          = If your network has been properly configured, and your hosts are set to pxeboot,
          = all you need to do now is boot the hosts and wait for them to come up.
          =
          = If the installation is cancelled here for whatever reason, you can continue the
          = install manually by running:
          =
          =      ansible-playbook -i inventory nodes.yml
          =
          = So far {{ groups.nodes | length }} hosts have been discovered
          = Nodes:
          = {{ "-" if groups.nodes else "" }} {{ resolved_dns | join("\n= - ")}}
          =
          = If all your hosts are listed, press <ctrl+c> and hit A to abort this loop. This will
          = mark this task as failed, just ignore it.
          =
          = If all your hosts are not listed, press <ctrl+c> and hit C to refresh the inventory
          ======================================================================================
      pause:
        prompt: "{{ message.split('\\n') | join('\n') }}"
  rescue:
    - set_fact:
        discovery_success: true
    - fail: msg="Loop aborted, {{ accessible_hosts | length }} hosts reported ready"


- name: Non-interactive host discovery checks
  when:
    - number_of_hosts
    - not prompt_for_hosts
  block:
    - set_fact:
        rebuild_foreman_hosts: "{{ (groups.nodes | length) >= number_of_hosts }}"
        discovery_success: "{{ (accessible_hosts | length) >= number_of_hosts }}"

    - name: break loop if all hosts report as accessible
      fail:
        msg: "{{ number_of_hosts }} hosts reported ready"
      when: discovery_success

    - pause:
        seconds: 30

- debug: msg="{{ accessible_hosts|length }}/{{ number_of_hosts }} report ready. {{ groups.nodes|length }} discovered in total."
- debug: msg="Nodes: {{ resolved_dns | join(', ') }}"

- name: Refresh inventory from foreman
  meta: refresh_inventory

- name: Refresh Foreman DNS
  when: rebuild_foreman_hosts
  block:
    - name: Get list of foreman hosts
      command: hammer --output yaml host list
      register: hammer_hosts_raw
      changed_when: false
    - set_fact:
        hosts_to_build: '{{ hammer_hosts_raw.stdout | from_yaml | map(attribute="Operating System") | rejectattr("build") | selectattr("managed") | list }}'
    - name: Rebuild foreman config
      command: hammer host rebuild-config --id {{ item.id }}
      with_items: '{{ hosts_to_build }}'
