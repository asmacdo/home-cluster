---

- name: make template dir
  file:
    path: /tmp/templates/
    state: directory
    mode: 0777

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: "/tmp/templates/{{ item.split('/')[-1] }}"
  with_fileglob:
    - 'files/*'

- name: Copy templates
  template:
    src: "{{ item }}"
    dest: "/tmp/templates/{{ item.split('/')[-1] }}"
  with_fileglob:
    - 'templates/*'

- include: create_or_update.yml
  vars:
    name: Fedora-Atomic {{ fedora_version }} Mirror
    resource: medium
    options: |
      --name "Fedora-Atomic {{ fedora_version }} Mirror"
      --os-family "Redhat"
      --path "{{ fedora_boot_content_url }}"


- include: create_or_update.yml
  vars:
    name: Discovery PXELinux Template
    resource: template
    options: |
      --name "Discovery PXELinux Template"
      --type "PXELinux"
      --locked "no"
      --file /tmp/templates/template_DiscoveryPXEBoot

- include: create_or_update.yml
  vars:
    name: Fedora-Atomic {{ fedora_version }} Kickstart
    resource: template
    options: |
      --name "Fedora-Atomic {{ fedora_version }} Kickstart"
      --type "provision"
      --locked "no"
      --file /tmp/templates/template_FedoraAtomicKickstart


- include: create_or_update.yml
  vars:
    name: "Fedora-Atomic"
    resource: os
    options: |
      --family "Redhat"
      --name "Fedora-Atomic"
      --major "{{ fedora_version }}"
      --partition-tables 'Kickstart default'
      --architectures x86_64
      --media "Fedora-Atomic {{ fedora_version }} Mirror"
      --provisioning-templates 'Kickstart default PXELinux,Fedora-Atomic {{ fedora_version }} Kickstart'
      --config-templates 'Kickstart default PXELinux,Fedora-Atomic {{ fedora_version }} Kickstart'

- name: Associate templates with OS
  command: |
    hammer template add-operatingsystem
      --name "{{ item }}"
      --operatingsystem 'Fedora-Atomic {{ fedora_version }}'
  with_items:
    - 'Fedora-Atomic {{ fedora_version }} Kickstart'
    - 'Kickstart default PXELinux'
  register: result
  failed_when: result.rc |int > 0 and 'already been taken' not in result.stderr
  changed_when: "'already been taken' not in result.stderr"

- name: Get OS ID
  shell: hammer os list --search "Fedora-Atomic {{ fedora_version }}" | grep "Fedora-Atomic {{ fedora_version }}" | awk -F "|" '{print $1}'
  register: fedora_atomic_os

- name: Get template IDs
  shell: hammer template list --search "{{ item }}" | grep "{{ item }}" | awk -F "|" '{print $1}'
  with_items:
    - 'Fedora-Atomic {{ fedora_version }} Kickstart'
    - 'Kickstart default PXELinux'
  register: template_ids

- name: Set default templates for OS
  command: hammer os set-default-template --id {{ fedora_atomic_os.stdout }} --config-template-id {{ item.stdout }}
  with_items: '{{ template_ids.results }}'

- include: create_or_update.yml
  vars:
    name: '{{ foreman_subdomain }}'
    resource: domain
    options: |
      --dns-id 1
      --name '{{ foreman_subdomain }}'

- include: create_or_update.yml
  name: production
  vars:
    resource: environment
    options: "--name production"

- include: create_or_update.yml
  vars:
    name: default
    resource: subnet
    options: |
      --name default
      --network {{ foreman_subnet }}
      --mask 255.255.255.0
      --dns-id 1
      --dns-primary {{ foreman_ip }}
      --domain-ids 1
      --tftp-id 1

- include: create_or_update.yml
  vars:
    name: openshift-nodes
    resource: hostgroup
    options: |
        --architecture "x86_64"
        --name "openshift-nodes"
        --operatingsystem "Fedora-Atomic {{ fedora_version }}"
        --environment "production"
        --partition-table "Kickstart default"
        --root-pass '{{ foreman_provisioning_password }}'
        --domain-id 1
        --subnet "default"
        --puppet-ca-proxy-id 1
        --puppet-proxy-id 1
        --medium "Fedora-Atomic {{ fedora_version }} Mirror"
        --pxe-loader '{{ pxe_loader | default("PXELinux BIOS")}}'

- include: create_or_update.yml
  vars:
    name: openshift-master
    resource: hostgroup
    options: |
        --name "openshift-master"
        --operatingsystem "Fedora-Atomic {{ fedora_version }}"
        --environment "production"
        --partition-table "Kickstart default"
        --root-pass '{{ foreman_provisioning_password }}'
        --domain-id 1
        --subnet "default"
        --puppet-ca-proxy-id 1
        --puppet-proxy-id 1
        --parent-id 1
        --medium "Fedora-Atomic {{ fedora_version }} Mirror"
        --pxe-loader '{{ pxe_loader | default("PXELinux BIOS")}}'

- include: create_or_update.yml
  vars:
    name: openshift-nodes
    resource: discovery-rule
    options: |
      --enabled yes
      --hostgroup "openshift-nodes"
      --hostname "node<%=@host.id%>"
      --name "openshift-nodes"
      --search "*"
      --priority 1

- include: create_or_update.yml
  vars:
    name: openshift-master
    resource: discovery-rule
    options: |
      --enabled yes
      --hostgroup "openshift-master"
      --hostname "master"
      --name "openshift-master"
      --search "*"
      --priority 0
      --max-count 1

# ansible_ssh_pass:
#   The default password to use when trying to run ansible roles.
# discovery_auto:
#   This will cause hosts to automatically provision themselves
#   based on the discovery-rules present. This way we don't
#   need to manually manage the hosts
# global_PXELinux:
#   We need to update the default pxelinux template that is
#   used so that discovery is the default instead of local boot
# ignore_facts_for_operatingsystem
#   /etc/fedora-release doesn't differentiate between normal
#   and atomic fedora, so if we update the OS from puppet
#   it will remove the fedora-atomic assignation from the host
# query_local_nameservers:
#   DNS was broken, I don't really understand this.
# safemode_render:
#   This was breaking stuff, if anyone could explain it to me
#   that would be great.
# unattended_orchestration:
#   This will allow puppet reports to update the DNS for a host
#   if the IP address has changed
# update_ip_from_built_request:
#   This will update the foreman host IP when the host reports
#   itself as built. This should help a bit with IP drift from
#   the first reboot.
# update_subnets_from_facts:
# update_environment_from_facts:
#   These two settings just tell us to update the host entry based 
#   on facts reported by puppet. This may be a good or bad idea,
#   I don't really know. Seemed like the sort of thing we'd want.
- name: Update settings
  command: |
    hammer settings set
      --name "{{ item.key }}"
      --value "{{ item.value }}"
  with_items:
    - key: 'ansible_ssh_pass'
      value: '{{ foreman_provisioning_password }}'
    - key: 'discovery_auto'
      value: 'true'
    - key: 'global_PXELinux'
      value: 'Discovery PXELinux Template'
    - key: 'ignore_facts_for_operatingsystem'
      value: 'true'
    - key: 'query_local_nameservers'
      value: 'true'
    - key: 'safemode_render'
      value: 'false'
    - key: 'unattended_orchestration'
      value: 'true'
    - key: 'update_ip_from_built_request'
      value: 'true'
    - key: 'update_subnets_from_facts'
      value: 'true'
    - key: 'update_environment_from_facts'
      value: 'true'

- name: Rebuild pxe default
  command: hammer template build-pxe-default
