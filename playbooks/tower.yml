---

- import_playbook: cluster_auth.yml

- hosts: localhost
  connection: local
  vars:
    tower_apb_image: docker.io/homecluster/tower-apb:latest
  vars_files:
    - '{{ playbook_dir }}/../config.yml'
  tasks:
    - name: Install Ansible Tower
      import_role:
        name: run_apb
      vars:
        permissions: cluster
        api_key: '{{ admin_api_token }}'
        host: '{{ openshift_host }}'
        verify_ssl: no
        action: provision
        name: tower-apb
        namespace: ansible-tower
        image: '{{ tower_apb_image }}'
        parameters:
          insecure: true
          # awx_postgresql_emptydir: true
          _apb_plan_id: all-in-one
          namespace: ansible-tower
          enable_dangerous_logs: true
          recommended_resources: false


- hosts: first_master
  gather_facts: no
  vars_files:
    - '{{ playbook_dir }}/../config.yml'
  tasks:
    - name: Create tower directory
      file:
        path: /tmp/awx
        state: directory

    - name: write tower credential information
      vars:
        sep: "\n  "
      copy:
        content: |
          username: root
          become_method: sudo
          ssh_key_data: |
            {{ lookup("file", "/home/fabian/.ssh/id_rsa").splitlines() | join(sep) }}
        dest: /tmp/awx/credentials

    - name: wait for tower to come up
      debug:
        msg: '{{ ready|length }}/4 report ready: {{ ready|map(attribute="name")|join(",")  }}'
      until: (ready|length) == 4
      retries: 100
      vars:
        ready: '{{ lookup(
          "k8s",
          kind="Pod",
          namespace="home-cluster",
          label_selector="deploymentconfig=awx",
          api_key=admin_api_token
        ).status.containerStatuses|default([]) | selectattr("ready", "eq", true) | list}}'

    - name: Create tower organization
      tower_organization:
        name: home-cluster
    - name: Create openshift-ansible tower project
      tower_project:
        name: openshift-ansible
        organization: home-cluster
        scm_type: git
        scm_url: https://github.com/openshift/openshift-ansible.git
        scm_branch: release-{{ openshift_version }}
    # wait?
    - name: Create home-cluster inventory
      tower_inventory:
        name: home-cluster
        organization: home-cluster
    - name: Create home-cluster credential
      tower_credential:
        name: home-cluster
        organization: home-cluster
        kind: ssh
        username: root
        become_method: sudo
        ssh_key_data: /tmp/awx/credentials
    - name: Create openshift-ansible scaleup job template
      tower_job_template:
        name: scaleup
        become_enabled: yes
        credential: home-cluster
        inventory: home-cluster
        job_type: run
        project: openshift-ansible
        playbook: playbooks/openshift-node/scaleup.yml
        verbosity: 1

    - name: add awx pod to inventory
      add_host:
        name: '{{ lookup("k8s", kind="Pod", namespace="home-cluster", label_selector="name=awx-web-deploy", host=openshift_host, api_key=admin_api_token, verify_ssl=False).metadata.name }}'
        groups: awx
        ansible_user: awx
        oc_container: awx_web
        oc_host: '{{ openshift_host }}'
        oc_namespace: home-cluster
        oc_token: '{{ admin_api_token }}'
        oc_verify_ssl: false

- hosts: awx
  connection: oc
  become: false
  tasks:
    - name: copy inventory directory
      copy:
        src: "{{ playbook_dir }}/../awx_inventory"
        dest: /tmp/awx_inventory_dir

    - name: get awx-compatible inventory
      command: ansible-inventory -i /tmp/awx_inventory_dir --list --export -y
      register: awx_inventory

    - name: write inventory to file
      copy:
        content: '{{ awx_inventory.stdout }}'
        dest: /tmp/inventory

    - name: sync inventory
      command: awx-manage inventory_import --inventory-name=home-cluster --source /tmp/inventory
