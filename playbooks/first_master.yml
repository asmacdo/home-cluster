---

- import_playbook: prep_inventory.yml

- hosts: first_master
  tasks:
    - name: disable selinux
      command: setenforce 0

    - name: Create dnsmasq entry
      copy:
        content: |
          server=/{{ master_subdomain }}/127.0.0.1
          address=/apps.{{ master_subdomain }}/{{ master_ip }}
        dest: /etc/dnsmasq.d/homecluster-dns.conf
      vars:
        master_subdomain: "{{ inventory_hostname.split('.')[1:] | join('.') }}"
        master_ip: '{{ ansible_host }}'

- hosts: localhost
  connection: local
  vars:
    openshift_installer_image_org: openshift
    openshift_installer_image_tag: v3.9
    openshift_host: 'https://{{ groups.first_master.0 }}:8443'
  tasks:
    - name: Get ID of current user
      command: id -u
      register: user_id
      changed_when: false

    - name: restart docker
      service:
        name: docker
        state: restarted
      become: true
      when: restart_docker|default(true)

    - name: Install single node openshift (run `docker logs -f openshift-ansible` to follow progress)
      docker_container:
        name: openshift-ansible
        image: '{{ openshift_installer_image_org }}/origin-ansible:{{ openshift_installer_image_tag }}'
        cleanup: yes
        detach: no
        user: '{{ user_id.stdout }}'
        env:
          INVENTORY_DIR: /tmp/inventory
          OPTS: '--private-key=/opt/app-root/src/.ssh/id_rsa -e @/tmp/config.yml'
          PLAYBOOK_FILE: playbooks/{{ item }}.yml
        volumes:
          - /home/fabian/.ssh/id_rsa:/opt/app-root/src/.ssh/id_rsa:Z,ro
          - '{{ playbook_dir }}/../awx_inventory:/tmp/inventory:Z,ro'
          - /etc/hosts:/etc/hosts:Z,ro
          - /etc/resolv.conf:/etc/resolv.conf:Z,ro
          - '{{ playbook_dir }}/../config.yml:/tmp/config.yml:Z,ro'
      with_items:
        - prerequisites
        - deploy_cluster
      when: deploy_openshift|default(true)

    - name: create admin user account
      command: oc adm policy add-cluster-role-to-user cluster-admin admin
      delegate_to: '{{ groups.first_master.0 }}'

    - name: login as admin
      command: oc login -u admin -p admin https://{{ groups.first_master.0 }}:8443 --insecure-skip-tls-verify=true
      delegate_to: '{{ groups.first_master.0 }}'

    - when: admin_api_token is not defined
      block:
      - name: Get admin token
        command: oc whoami -t
        register: token
        delegate_to: '{{ groups.first_master.0 }}'

      - set_fact:
          admin_api_token: '{{ token.stdout }}'

    - name: Create home-cluster namespace
      k8s_raw:
        host: '{{ openshift_host }}'
        api_key: '{{ admin_api_token }}'
        verify_ssl: no
        api_version: v1
        kind: Namespace
        name: home-cluster
        state: present

    - name: Install rook (Ceph storage for cluster)
      import_role:
        name: run_apb
      vars:
        api_key: '{{ admin_api_token }}'
        host: '{{ openshift_host }}'
        verify_ssl: no
        action: provision
        name: ceph-apb
        namespace: home-cluster
        image: docker.io/homecluster/ceph-apb:latest
        pull_policy: Always
        parameters:
          namespace: home-cluster
          admin_api_key: '{{ admin_api_token }}'

    - name: Install Ansible Tower
      import_role:
        name: run_apb
      vars:
        api_key: '{{ admin_api_token }}'
        host: '{{ openshift_host }}'
        verify_ssl: no
        action: provision
        name: tower-apb
        namespace: home-cluster
        image: docker.io/homecluster/tower-apb:latest
        pull_policy: Always
        parameters:
          skip_tls_verify: true
          postgresql_emptydir: true
          _apb_plan_id: all-in-one
          namespace: home-cluster
          enable_dangerous_logs: true
          admin_api_token: '{{ admin_api_token }}'
