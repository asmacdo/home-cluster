---

- import_playbook: prep_inventory.yml

- hosts: matchbox
  tasks:
    - file:
        path: '{{ item }}'
        state: directory
      with_items:
        - /var/lib/matchbox
        - /var/lib/matchbox/assets
        - /etc/matchbox

    - unarchive:
        src: 'https://github.com/coreos/matchbox/releases/download/v0.7.0/matchbox-v0.7.0-linux-amd64.tar.gz'
        dest: /tmp/
        remote_src: yes
        creates: /tmp/matchbox-v0.7.0-linux/amd64/scripts/tls/cert-gen

    - command: ./cert-gen chdir=/tmp/matchbox-v0.7.0-linux-amd64/scripts/tls
      environment:
        SAN: 'DNS.1:{{ inventory_hostname }},IP.1:{{ matchbox_ip }}'

    - command: ./scripts/get-coreos chdir=/tmp/matchbox-v0.7.0-linux-amd64/
    - command: cp -r /tmp/matchbox-v0.7.0-linux-amd64/examples/assets/coreos /var/lib/matchbox/assets

    - copy:
        src: /tmp/matchbox-v0.7.0-linux-amd64/scripts/tls/{{ item }}
        dest: /etc/matchbox/{{ item }}
        remote_src: yes
      with_items:
        - ca.crt
        - server.crt
        - server.key

    - name: start firewalld
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: open ports
      firewalld:
        service: '{{ item }}'
        state: enabled
        permanent: true
        immediate: true
      with_items:
        - dhcp
        - tftp
        - dns

    - name: open ports
      firewalld:
        port: '{{ item }}'
        state: enabled
        permanent: true
        immediate: true
      with_items:
        - 8080/tcp
        - 8081/tcp


    - name: setup tftp/dns
      docker_container:
        name: matchbox_dns
        image: quay.io/coreos/dnsmasq
        auto_remove: no
        capabilities:
          - 'NET_ADMIN'
        network_mode: host
        command:
          - '-d'
          - '-q'
          - '--dhcp-range=192.168.17.11,proxy,255.255.255.0'
          - '--enable-tftp'
          - '--tftp-root=/var/lib/tftpboot'
          - '--dhcp-userclass=set:ipxe,iPXE'
          - '--pxe-service=tag:#ipxe,x86PC,"PXE chainload to iPXE",undionly.kpxe'
          - '--pxe-service=tag:ipxe,x86PC,"iPXE",http://{{ matchbox_ip }}:8080/boot.ipxe'
          - '--log-queries'
          - '--log-dhcp'

    - name: run matchbox
      docker_container:
        name: matchbox
        image: quay.io/coreos/matchbox:latest
        command:
          - '-address=0.0.0.0:8080'
          - '-log-level=debug'
        auto_remove: no
        network_mode: host
        volumes:
          - /var/lib/matchbox:/var/lib/matchbox:Z
          - /etc/matchbox:/etc/matchbox:Z,ro
