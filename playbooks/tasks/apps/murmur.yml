---

- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: murmur

- name: Create PVCs
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: '{{ item }}'
        namespace: murmur
        labels:
          app: murmur
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  loop:
    - murmur-config
    - murmur-db

- name: Create deployment
  community.kubernetes.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: murmur-deployment
        namespace: murmur
        labels:
          app: murmur
      spec:
        selector:
          matchLabels:
            app: murmur
        template:
          metadata:
            labels:
              app: murmur
          spec:
            containers:
            - image: goofball222/murmur:latest
              imagePullPolicy: Always
              env:
                - name: RUN_CHOWN
                  value: "false"
              name: murmur-container
              stdin: true
              tty: true
              ports:
              - containerPort: 64738
              readinessProbe:
                tcpSocket:
                  port: 64738
                initialDelaySeconds: 5
                periodSeconds: 10
              livenessProbe:
                tcpSocket:
                  port: 64738
                initialDelaySeconds: 30
                periodSeconds: 10
              volumeMounts:
              - mountPath: /opt/murmur/config
                name: murmur-config
              - mountPath: /opt/murmur/data
                name: murmur-db
            volumes:
            - name: murmur-config
              persistentVolumeClaim:
                claimName: murmur-config
            - name: murmur-db
              persistentVolumeClaim:
                claimName: murmur-db

- name: Create murmur udp service
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: murmur-udp
        namespace: murmur
        labels:
          app: murmur
        annotations:
          metallb.universe.tf/allow-shared-ip: "true"
      spec:
        type: LoadBalancer
        ports:
          - name: murmur-udp
            port: 64738
            protocol: UDP
        selector:
          app: murmur

- name: Wait for murmur service to receive an IP
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Service
    name: murmur-udp
    namespace: murmur
  register: murmur_udp
  until: "(murmur_udp.resources.0.status.get('loadBalancer', {}).get('ingress', []).0|default({})).ip is defined"

- name: Create murmur tcp service
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: murmur-tcp
        namespace: murmur
        labels:
          app: murmur
        annotations:
          metallb.universe.tf/allow-shared-ip: "true"
      spec:
        type: LoadBalancer
        loadBalancerIP: '{{ murmur_udp.resources.0.status.loadBalancer.ingress.0.ip }}'
        ports:
          - name: murmur-tcp
            port: 64738
            protocol: TCP
        selector:
          app: murmur

- name: Get murmur pod
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: murmur
    label_selectors:
      - 'app=murmur'
    field_selectors:
      - 'status.phase=Running'
  register: murmur_pods
  until: murmur_pods.resources
  retries: 120
  delay: 30

- name: Generate a SuperUser password
  community.kubernetes.k8s_exec:
    namespace: murmur
    pod: '{{ murmur_pods.resources.0.metadata.name }}'
    command: ./murmur.x86 -ini /opt/murmur/config/murmur.ini -supw {{ lookup('password', password_opts) }}
  vars:
    password_opts: '{{ playbook_dir }}/../artifacts/mumble_password.txt chars=ascii_letters,digits'

- name: Inform user about credentials
  debug:
    msg: |
      Mumble has been successfully deployed.
      Address: {{ ip }}
      Port: 64738
      Username: SuperUser
      Password: Stored in {{ password_file }}
  vars:
    ip: '{{ murmur_udp.resources.0.status.loadBalancer.ingress.0.ip }}'
    password_file: '{{ playbook_dir }}/../artifacts/mumble_password.txt'
