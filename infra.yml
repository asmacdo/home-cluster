---

- name: wait for hosts up
  hosts: nodes
  gather_facts: false
  tasks:
  - name: "Wait for host up"
    local_action: wait_for
    args:
      host: "{{ inventory_hostname }}"
      port: 22
      state: started
      delay: 10
      timeout: 3600

- name: atomic host upgrade if docker version is too old
  hosts: nodes
  # TODO make a role for this
  tasks:
    - name: get docker version
      shell: docker --version | awk '{print $3}' | cut -d ',' -f 1
      register: version

    - name: Docker version
      debug: msg={{ version.stdout }}

    - set_fact:
        upgrade: '{{ not (version.stdout.split(".")[0]|int >= 1 and version.stdout.split(".")[1]|int >= 12) }}'

    - name: Upgrading atomic host
      debug: msg={{ upgrade }}
      when: upgrade

    - name: atomic host upgrade
      atomic_host:
        revision: latest
      when: upgrade

    - name: Reboot if required
      shell: shutdown -r +1
      async: 0
      poll: 0
      when: upgrade

    - name: "Wait for reboot"
      local_action: wait_for
      args:
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
        delay: 60
        timeout: 3600
      when: upgrade

- name: ensure required sub-projects exist
  hosts: localhost
  tasks:
    - name: clone projects
      when: clone_projects | default(True)
      git:
        repo: '{{ item.repo }}'
        dest: '{{ playbook_dir + "/" + item.dir }}'
      with_items:
        - repo: https://github.com/openshift/openshift-ansible.git
          dir: openshift-ansible
        # - repo: https://github.com/fabianvf/ceph-openshift.git
        #   dir: ceph-openshift


- include: openshift-ansible/playbooks/byo/config.yml
  when: install_openshift|default(True)

# TODO: https://github.com/ceph/ceph-docker/tree/master/examples/kubernetes
# Write my own playbook that uses templates like those above
# - include: ceph-openshift/deploy.yml
#   when: install_ceph|default(False)

- hosts: oo_first_master
  gather_facts: false
  tasks:
    - name: Grant cluster-admin permissions to admin user
      command: oc adm policy add-cluster-role-to-user cluster-admin admin

- hosts: localhost
  gather_facts: false
  tasks:
    - name: oc login
      command: oc login -u admin -p admin
